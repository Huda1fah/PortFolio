import React, { useEffect, useRef, useState } from 'react';
import { Mail, Linkedin, Github, Send, CheckCircle } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';

export default function ContactSection() {
  const sectionRef = useRef(null);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('is-visible');
          }
        });
      },
      {
        threshold: 0.1,
        triggerOnce: true
      }
    );

    const elementsToAnimate = sectionRef.current.querySelectorAll('.fade-in-up');
    elementsToAnimate.forEach(el => observer.observe(el));
    
    return () => {
        elementsToAnimate.forEach(el => {
            if(el) observer.unobserve(el);
        });
    }
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    setIsSubmitted(true);
    setTimeout(() => {
      setIsSubmitted(false);
      setFormData({ name: '', email: '', message: '' });
    }, 4000);
  };

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <section 
      ref={sectionRef}
      className="contact-section relative min-h-screen px-6 py-20 overflow-hidden"
    >
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-20 right-10 w-40 h-40 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full opacity-5"></div>
        <div className="absolute bottom-20 left-10 w-32 h-32 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full opacity-5"></div>
      </div>

      <div className="relative z-10 max-w-4xl mx-auto">
        <div className="fade-in-up text-center mb-16">
          <h2 className="text-5xl lg:text-6xl font-light tracking-tight text-gray-900 mb-6">
            Let's
            <span className="block text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
              Connect
            </span>
          </h2>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto mb-12" style={{transitionDelay: '0.2s'}}>
            Interested in quantum computing research, collaboration, or just want to chat about 
            the future of computation? I'd love to hear from you.
          </p>
          
          <div className="flex justify-center gap-6 mb-16">
            <a 
              href="mailto:hudaifah@quantum.com"
              className="group flex items-center gap-2 px-6 py-3 bg-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-blue-200"
            >
              <Mail className="w-5 h-5 text-gray-600 group-hover:text-blue-600 transition-colors duration-300" />
              <span className="text-gray-700 group-hover:text-blue-600 transition-colors duration-300">Email</span>
            </a>
            
            <a 
              href="https://linkedin.com/in/syedhudaifah"
              target="_blank"
              rel="noopener noreferrer"
              className="group flex items-center gap-2 px-6 py-3 bg-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-blue-200"
            >
              <Linkedin className="w-5 h-5 text-gray-600 group-hover:text-blue-600 transition-colors duration-300" />
              <span className="text-gray-700 group-hover:text-blue-600 transition-colors duration-300">LinkedIn</span>
            </a>
            
            <a 
              href="https://github.com/syedhudaifah"
              target="_blank"
              rel="noopener noreferrer"
              className="group flex items-center gap-2 px-6 py-3 bg-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-blue-200"
            >
              <Github className="w-5 h-5 text-gray-600 group-hover:text-blue-600 transition-colors duration-300" />
              <span className="text-gray-700 group-hover:text-blue-600 transition-colors duration-300">GitHub</span>
            </a>
          </div>
        </div>

        <div className="fade-in-up bg-white rounded-2xl shadow-2xl p-8 md:p-12 border border-gray-100" style={{transitionDelay: '0.4s'}}>
          {!isSubmitted ? (
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">
                    Name
                  </label>
                  <Input
                    id="name"
                    name="name"
                    type="text"
                    required
                    value={formData.name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    placeholder="Your name"
                  />
                </div>
                
                <div>
                  <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
                    Email
                  </label>
                  <Input
                    id="email"
                    name="email"
                    type="email"
                    required
                    value={formData.email}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    placeholder="your.email@example.com"
                  />
                </div>
              </div>
              
              <div>
                <label htmlFor="message" className="block text-sm font-medium text-gray-700 mb-2">
                  Message
                </label>
                <Textarea
                  id="message"
                  name="message"
                  rows={6}
                  required
                  value={formData.message}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 resize-none"
                  placeholder="Tell me about your quantum computing interests or collaboration ideas..."
                />
              </div>
              
              <div>
                <Button
                  type="submit"
                  className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium py-4 px-6 rounded-lg transition-all duration-300 flex items-center justify-center gap-2 shadow-lg hover:shadow-xl"
                >
                  <Send className="w-5 h-5" />
                  Send Message
                </Button>
              </div>
            </form>
          ) : (
            <div className="text-center py-12 transition-opacity duration-500">
              <div className="w-16 h-16 bg-gradient-to-r from-green-500 to-teal-500 rounded-full flex items-center justify-center mx-auto mb-6">
                <CheckCircle className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-2xl font-semibold text-gray-900 mb-4">
                Message Sent Successfully!
              </h3>
              <p className="text-gray-600">
                Thank you for reaching out. I'll get back to you as soon as possible.
              </p>
            </div>
          )}
        </div>
      </div>
    </section>
  );
}